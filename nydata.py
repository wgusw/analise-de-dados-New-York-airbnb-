# -*- coding: utf-8 -*-
"""NYdata.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rXCMviVSjN-FTiRng3fkMtcIw1K7L6pA

## An√°lise de Dados do Airbnb em Nova York: Tend√™ncias, Pre√ßos e Disponibilidade
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

data = pd.read_csv('AB_NYC_2019.csv')
data.head(3) # comando para reconhecer os dados

"""### **Dados de pre√ßo por regi√£o**"""

#aplicando m√©todo "agg()" para realizar mais de uma opera√ß√£o
estatisticas_por_regiao = data.groupby('neighbourhood_group').agg(
    max_preco=('price', 'max'),
    media_preco=('price', 'mean'),
    min_preco=('price', 'min'),
    total_listagens=('calculated_host_listings_count', 'sum'),
    avaliacao_media=('reviews_per_month', 'mean')
).reset_index()

# Exibindo a tabela resultante
display(estatisticas_por_regiao)

"""Nesta tabela podemos analisar os dados por regi√£o pelo pre√ßo m√°ximo, min√≠mo, m√©dio e total.

### An√°lise de Tipos de Acomoda√ß√£o
"""

acomodacao = data['room_type']
regiao = data['neighbourhood_group']

# VISUALIZA√á√ÉO DE DADOS

plt.figure(figsize=(10, 6))
sns.countplot(x=acomodacao, hue=regiao)
plt.title('Distribui√ß√£o de Tipos de Acomoda√ß√£o por Regi√£o')
plt.xlabel('Tipos de Acomoda√ß√£o por regi√£o')
plt.ylabel('Quantidade')
plt.xticks(rotation=45)
plt.legend(title='Regi√£o')
plt.show()

# Iterar sobre cada regi√£o e criar gr√°ficos de pizza
regioes = data['neighbourhood_group'].unique()

for regiao in regioes:
    # Filtrar os dados por regi√£o
    dados_regiao = data[data['neighbourhood_group'] == regiao]

    # Contar os tipos de acomoda√ß√£o
    tipos_acomodacao = dados_regiao['room_type'].value_counts()

    # Plotar o gr√°fico de pizza
    plt.figure(figsize=(6, 6))
    plt.pie(
        tipos_acomodacao,
        labels=tipos_acomodacao.index,
        autopct='%1.1f%%',
        startangle=90,
        colors=sns.color_palette('Set2', n_colors=len(tipos_acomodacao))
    )
    plt.title(f'Distribui√ß√£o de Tipos de Acomoda√ß√£o - {regiao}', fontsize=14)
    plt.axis('equal')  # Assegura que o gr√°fico seja um c√≠rculo
    plt.tight_layout()
    plt.show()

"""Neste gr√°fico podemos ver a frequ√™ncia de cada categoria e sua estat√≠stica.

# Distribui√ß√£o de pre√ßos

# Pergunta: Qual a faixa de pre√ßo predominante por tipo de acomoda√ß√£o?
"""

tipo_de_acomodacao = data['room_type']
preco = data['price']

# Configurando a figura
plt.figure(figsize=(12, 8))

# Criando o boxplot
sns.boxplot(
    x='room_type',
    y='price',
    data=data,
    palette='Set1',
    hue='neighbourhood_group',
    showfliers=False  # Oculta outliers para uma visualiza√ß√£o mais limpa
)

# Ajustando o gr√°fico
plt.title('Distribui√ß√£o de Pre√ßos por Tipo de Acomoda√ß√£o', fontsize=16)
plt.xlabel('Tipo de Acomoda√ß√£o', fontsize=12)
plt.ylabel('Pre√ßo (USD)', fontsize=12)
plt.xticks(fontsize=10)
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.legend(title='Regi√£o', fontsize=10)
plt.tight_layout()
plt.show()

"""üìå Principais Observa√ß√µes
"Entire home/apt" tem a maior varia√ß√£o de pre√ßos

Os pre√ßos s√£o significativamente mais altos e vari√°veis para esse tipo de acomoda√ß√£o, especialmente em Manhattan e Brooklyn.
H√° outliers indicando algumas listagens com pre√ßos extremamente elevados.
"Private room" tem uma faixa de pre√ßos mais est√°vel

A maioria dos valores est√° entre 50 e 150 USD, dependendo da regi√£o.
Manhattan apresenta pre√ßos um pouco mais altos e dispersos.
"Shared room" tem os pre√ßos mais baixos

Os pre√ßos s√£o mais uniformes e bem abaixo das outras categorias.
As medianas das regi√µes s√£o pr√≥ximas entre si, indicando uma menor varia√ß√£o de pre√ßos entre os bairros para este tipo de acomoda√ß√£o.
Diferentes regi√µes apresentam varia√ß√µes distintas

Manhattan tende a ter pre√ßos mais elevados e dispersos, principalmente para apartamentos inteiros.
Brooklyn tamb√©m apresenta alta varia√ß√£o de pre√ßos, mas com valores um pouco mais baixos do que Manhattan.
Queens, Bronx e Staten Island possuem pre√ßos mais acess√≠veis e menos dispersos.
üìä O que esse boxplot pode indicar?
Viajantes com or√ßamento menor podem preferir Private rooms ou Shared rooms em regi√µes como Queens ou Bronx.
Propriet√°rios podem ajustar os pre√ßos com base na regi√£o e no tipo de acomoda√ß√£o para competir no mercado.
An√°lises futuras podem verificar se a demanda e as avalia√ß√µes justificam essas diferen√ßas de pre√ßos.
Se precisar de mais detalhes ou quiser ajustes no gr√°fico, me avise! üöÄ

### Popularidade por Regi√£o
"""

# Calculando a m√©dia de avalia√ß√µes por bairro
media_avaliacoes = data.groupby('neighbourhood')['number_of_reviews'].mean().reset_index()

# Renomeando as colunas para legibilidade
media_avaliacoes.columns = ['Bairro', 'M√©dia de Avalia√ß√µes']

# Ordenando os bairros pela m√©dia de avalia√ß√µes em ordem decrescente
media_avaliacoes = media_avaliacoes.sort_values(by='M√©dia de Avalia√ß√µes', ascending=False)

# Exibindo os 10 bairros com maior m√©dia de avalia√ß√µes
display(media_avaliacoes.head(10))

"""### Visualiza√ß√£o"""

# Configurando o gr√°fico de barras
plt.figure(figsize=(12, 8))
sns.barplot(
    data=media_avaliacoes.head(10),  # Os 10 bairros mais populares
    x='M√©dia de Avalia√ß√µes',
    y='Bairro',
    palette='coolwarm'
)

# Ajustando o gr√°fico
plt.title('Top 10 Bairros com Maior M√©dia de Avalia√ß√µes', fontsize=16)
plt.xlabel('M√©dia de Avalia√ß√µes', fontsize=12)
plt.ylabel('Bairro', fontsize=12)
plt.grid(axis='x', linestyle='--', alpha=0.7)
plt.show()